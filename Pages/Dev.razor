@page "/"
@using Listas.Models
@using Listas.Services

<PageTitle>Home</PageTitle>

<input type="text" class="form-control mb-2 mt-5" style="width: 26rem" @bind="Informacion" />

<button class="btn btn-success" @onclick="AgregarNodoFinal">
    Agregar Nodo Al final
</button>

<button class="btn btn-primary" @onclick="AgregarNodoInicio">
    Agregar Nodo Al Inicio
</button>

<hr />

<p class="bg-dark text-white">@Mensaje</p>

<hr />

<div>
    <label>Posición del Nodo a Eliminar:</label>
    <input type="number" @bind="posicion" />
    <button class="btn btn-danger" @onclick="EliminarNodoAntesDePosicion">Eliminar Nodo Antes de Posición</button>
</div>

<hr />

<ul>
    @foreach (var item in Lista)
    {
        <li>@item</li>
    }
</ul>

@code {
    public string Informacion { get; set; }
    public int posicion { get; set; }
    public ListaEnlazadaSimple Lista { get; set; } = new();

    string Mensaje = string.Empty;

    void AgregarNodoFinal()
    {
        Nodo nuevoNodo = new Nodo(Informacion);
        Mensaje = Lista.AgregarNodoAlFinal(nuevoNodo);
        this.Informacion = string.Empty;
    }

    void AgregarNodoInicio()
    {
        Nodo nuevoNodo = new Nodo(Informacion);
        Mensaje = Lista.AgregarNodoAlInicio(nuevoNodo);
        this.Informacion = string.Empty;
    }

    void EliminarNodoAntesDePosicion()
    {
        if (Lista.ListaVacia() || posicion <= 1 || posicion > Lista.ContarNodos())
        {
            Mensaje = "Posición inválida o la lista está vacía.";
            return;
        }

        if (posicion == 2) // Caso especial, eliminar el primer nodo.
        {
            Lista.PrimerNodo = Lista.PrimerNodo.Referencia;
            if (Lista.PrimerNodo == null) Lista.UltimoNodo = null; // Si la lista quedó vacía
            Mensaje = "Se ha eliminado el nodo en la primera posición.";
            return;
        }

        Nodo? nodoActual = Lista.PrimerNodo;
        Nodo? nodoAnterior = null;
        int contador = 1;

        while (nodoActual != null && nodoActual.Referencia != null)
        {
            if (contador == posicion - 1)
            {
                if (nodoActual.Referencia == Lista.UltimoNodo)
                {
                    Lista.UltimoNodo = nodoActual;
                }
                nodoActual.Referencia = nodoActual.Referencia.Referencia;
                Mensaje = "Se ha eliminado el nodo antes de la posición especificada.";
                return;
            }
            nodoAnterior = nodoActual;
            nodoActual = nodoActual.Referencia;
            contador++;
        }

        Mensaje = "La posición especificada no existe en la lista.";
    }
}


