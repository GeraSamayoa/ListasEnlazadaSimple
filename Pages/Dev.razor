@page "/"
@using Listas.Models
@using Listas.Services

<PageTitle>Eliminar Nodo Antes de Posición</PageTitle>

<div class="container mt-3">
    <input type="text" class="form-control mb-2" placeholder="Información del Nodo" @bind="Informacion" />
    <button class="btn btn-success me-2" @onclick="AgregarNodoFinal">Agregar Nodo Al Final</button>
    <button class="btn btn-primary me-2" @onclick="AgregarNodoInicio">Agregar Nodo Al Inicio</button>

    <div class="my-3">
        <label>Posición del Nodo a Eliminar Antes:</label>
        <input type="number" class="form-control w-auto d-inline-block" @bind="posicion" />
        <button class="btn btn-danger" @onclick="EliminarNodoAntesDePosicion">Eliminar Nodo Antes de Posición</button>
    </div>

    @if (!string.IsNullOrEmpty(Mensaje))
    {
        <p class="bg-dark text-white p-2">@Mensaje</p>
    }

    <ul class="list-group mt-3">
        @foreach (var item in Lista)
        {
            <li class="list-group-item">@item.ToString()</li>
        }
    </ul>
</div>

@code {
    public string Informacion { get; set; }
    public int posicion { get; set; }
    public ListaEnlazadaSimple Lista { get; set; } = new();

    string Mensaje = string.Empty;

    void AgregarNodoFinal()
    {
        if (!string.IsNullOrWhiteSpace(Informacion))
        {
            Nodo nuevoNodo = new Nodo(Informacion);
            Mensaje = Lista.AgregarNodoAlFinal(nuevoNodo);
            Informacion = string.Empty;
        }
    }

    void AgregarNodoInicio()
    {
        if (!string.IsNullOrWhiteSpace(Informacion))
        {
            Nodo nuevoNodo = new Nodo(Informacion);
            Mensaje = Lista.AgregarNodoAlInicio(nuevoNodo);
            Informacion = string.Empty;
        }
    }

    void EliminarNodoAntesDePosicion()
    {
        Mensaje = Lista.EliminarNodoAntesDe(posicion);
    }

}

